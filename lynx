#!/bin/bash

#   __
#  / /_   _ _ __ __  __
# / / | | | | '_ \\ \/ /
#/ /__| |_| | | | |>  <
#\____/\__, |_| |_/_/\_\
#      |___/ v0.1
# Welcome to lynx!
# Be prepared to turn your linux laptop (or desktop, no haters here)
# into an awesome development machine.

#trap

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

# Helper f(x)'s and variable(s)

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
  fi
}

install_asdf_language() {
  local language="$1"
  local version
  version="$(asdf list-all "$language" | tail -1)"

  if ! asdf list "$language" | grep -Fq "$version"; then
    asdf install "$language" "$version"
    asdf global "$language" "$version"
  fi
}

install_asdf_plugin() {
  local name="$1"
  local url="$2"

  if ! asdf plugin-list | grep -Fq "$name"; then
    asdf plugin-add "$name" "$url"
  fi
}

# start of program

echo ""

sleep 0.2 && echo "   __"
sleep 0.2 && echo "  / /_   _ _ __ __  __"
sleep 0.2 && echo " / / | | | | '_ \\ \/ /"
sleep 0.2 && echo "/ /__| |_| | | | |>  <"
sleep 0.2 && echo "\____/\__, |_| |_/_/\_\\"
sleep 0.2 && echo "      |___/ v0.1"

echo ""
sleep 0.1
echo "Made with <3 by: Nicholas Adamou (4d4m0u)"
sleep 0.1
echo "Turn your linux laptop (or desktop, no haters here) into"
echo "an awesome development machine. (Lynx)"
sleep 0.1

echo ""

# OS pre-check

kernelName="$(uname -s)"
if [ "$kernelName" == "Linux" ] && [ -e "/etc/lsb-release" ]; then
        if ! [ "$(cat < '/etc/lsb-release' | grep DISTRIB_ID | grep -o Ubuntu)" == "Ubuntu" ]; then
           echo "[!] Sorry! we don't currently support this linux distro."
           exit 1
        fi
fi

# initial configuration(s)

echo "[-] Making initial configuration(s) ..."

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

HOMEBREW_PREFIX="/usr/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /usr/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

# maintenance

sudo apt-get update -qqy
export DEBIAN_FRONTEND=\"noninteractive\" \
      && sudo apt-get -o Dpkg::Options::=\"--force-confnew\" upgrade -qqy

# dependencies

# shellcheck disable=SC2002
cat packages.txt | xargs sudo apt-get -y install &> /dev/null

# oh-my-zsh

if ! which zsh; then
	sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
fi

append_to_zshrc "export PATH=""$HOME"/.bin:"$PATH"""

case "$SHELL" in
  */zsh) : ;;
  *)
    echo "[-] Changing your shell to zsh ..."
      chsh -s "$(which zsh)"
    ;;
esac

# brew

echo "[-] Configuring brew ..."

if ! which brew &> /dev/null; then
	echo "[-] Installing Linuxbrew ..."
  yes | ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install)"

	git clone git://github.com/Linuxbrew/brew.git ~/.linuxbrew &> dev/null

	append_to_zshrc '# recommended by brew doctor'

  # shellcheck disable=SC2016
	append_to_zshrc "export PATH=$HOME/.linuxbrew/bin:$PATH" 1
	append_to_zshrc "export MANPATH=$HOME/.linuxbrew/share/man:$MANPATH" 1
	append_to_zshrc "export INFOPATH=$HOME/.linuxbrew/share/info:$INFOPATH" 1
fi

if brew list | grep -Fq brew-cask; then
  echo "[-] Uninstalling old Linuxbrew-Cask ..."
  brew uninstall --force brew-cask
fi

echo "[-] Updating Linuxbrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151
brew bundle --file=- <<EOF
tap "thoughtbot/formulae"
tap "homebrew/services"
tap "universal-ctags/universal-ctags"
tap "caskroom/cask"

# Unix
brew "universal-ctags", args: ["HEAD"]
brew "git"
brew "openssl"
brew "rcm"
brew "reattach-to-user-namespace"
brew "the_silver_searcher"
brew "tmux"
brew "vim"
brew "watchman"
brew "zsh"

# Heroku
brew "heroku"
brew "parity"

# GitHub
brew "hub"

# Image manipulation
brew "imagemagick"

# Testing
brew "qt@5.5" if MacOS::Xcode.installed?

# Programming language prerequisites and package managers
brew "libyaml" # should come after openssl
brew "coreutils"
brew "yarn"
cask "gpgtools"

# Databases
brew "postgres", restart_service: :changed
brew "redis", restart_service: :changed
EOF

# asdf version manager

echo "[-] Configuring asdf version manager..."
if [ ! -d "$HOME/.asdf" ]; then
  git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.3.0
  append_to_zshrc "source $HOME/.asdf/asdf.sh" 1
fi

# shellcheck disable=SC1090
source "$HOME/.asdf/asdf.sh"
install_asdf_plugin "ruby" "https://github.com/asdf-vm/asdf-ruby.git"
install_asdf_plugin "nodejs" "https://github.com/asdf-vm/asdf-nodejs.git"

# ruby

echo "[-] Installing latest Ruby..."
install_asdf_language "ruby"
gem update --system
gem_install_or_update "bundler"
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

# Cache local configuration(s)

if [ -f "$HOME/.lynx.local" ]; then
  echo "[-] Running your customizations from ~/.lynx.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.lynx.local"
fi
